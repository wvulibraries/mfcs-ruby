version: '3.4'
services:
  db:
    container_name: db  
    image: postgres:15.2-alpine
    ports:
      - "5432:5432"
    env_file:
      - './env/.env.dev.db'       
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
        test: pg_isready -U postgres -h postgres
        interval: 30s
        timeout: 3s
        retries: 3 
    networks:
      - mfcs_net

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
  #   container_name: mfcs_elasticsearch
  #   restart: always
  #   env_file:
  #     - './env/.env.es'   
  #   volumes: 
  #     - elasticsearch:/usr/share/elasticsearch/data
  #   ports: 
  #     - 9200:9200
  #     - 9300:9300  
  #   healthcheck:
  #     interval: 10s
  #     retries: 80
  #     test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/    
  #   networks:
  #     - mfcs_net  

  redis:
    image: redis:alpine
    container_name: mfcs_redis
    command: redis-server
    env_file:
      - './env/.env.dev.redis'    
    volumes:
      - redis:/var/lib/redis/data
    restart: unless-stopped
    healthcheck:
      test: redis-cli -h redis ping
      interval: 30s
      timeout: 3s
      retries: 3 
    networks:
      - mfcs_net 

  app: &app_base
    build:
      context: .
    env_file:
      - './env/.env.dev.mfcs'       
    volumes:
      - ./mfcs:/home/mfcs:cached
      - ./scripts:/home/mfcs/scripts      
      - rails_cache_data:/home/mfcs/app/tmp/cache
      - bundle_data:/usr/local/bundle
      - node_modules_data:/home/mfcs/node_modules
      - packs_data:/home/mfcs/app/public/packs
      - mfcs_storage:/home/mfcs/storage
      # testing php mfcs exports / imports
      - ./data/logs:/home/mfcs/log
      - ./data/mfcs-data:/home/mfcs/data
      - ./data/forms:/home/mfcs/importing/forms
      - ./data/objects:/home/mfcs/importing/objects
      - ./data/projects:/home/mfcs/importing/projects
      - ./data/users:/home/mfcs/importing/users
      - ./data/watermarks:/home/mfcs/importing/watermarks
      - ./data/folklife_1605711112:/home/mfcs/importing/folklife_1605711112  
    tmpfs:
      - /mfcs/tmp      
    depends_on:
      - db
      # - elasticsearch
      - redis 

  mfcs_ruby:
    <<: *app_base 
    command: >
      bash -c "rm -f tmp/pids/server.pid; rm -rf tmp/cache; bundle exec rails s -p 3000 -b 0.0.0.0"
    container_name: mfcs_ruby
    restart: unless-stopped   
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:3000/
    ports:
      - "3000:3000"      
    networks:
      - mfcs_net

  webpacker:
    <<: *app_base 
    command: bundle exec ./bin/webpack-dev-server --inline true
    container_name: mfcs_webpacker
    restart: unless-stopped    
    ports:
      - '3035:3035'      
    networks:
      - mfcs_net

  sidekiq:
    <<: *app_base
    command: bundle exec sidekiq -C config/sidekiq.yml
    container_name: mfcs_sidekiq
    restart: unless-stopped       
    networks:
      - mfcs_net 

volumes:
  rails_cache_data:
  bundle_data:
  node_modules_data:
  packs_data:
  redis:
  postgres:
  elasticsearch:
  mfcs_storage:

networks:
  mfcs_net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-mfcs
  