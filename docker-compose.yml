version: '3'

services:
  postgres:
    container_name: mfcs_db
    restart: always
    image: postgres:10
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=docker
    volumes:
      - ./postgresdata/db:/var/lib/postgresql/data

  redis:
    image: 'redis:5-alpine'
    container_name: mfcs_redis
    command: redis-server
    restart: always
    volumes:
      - ./redis:/var/lib/redis/data

  mfcs: 
    build: .
    tty: true
    stdin_open: true
    container_name: mfcs
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    environment:
      - SECRET_KEY_BASE=test
      - DATABASE_PASSWORD=docker
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - TERM=xterm 
      - REDIS_URL_SIDEKIQ=redis://mfcs_redis:6379/12
      # - RAILS_ENV=production # replace with your current environment development or production
    volumes:
      - ./:/home/mfcs
    ports:
      - "3000:3000" 
      - "3001:3001"
    links:
      - 'postgres'
      - 'redis'
      - 'elasticsearch'

  sidekiq:
    container_name: mfcs_sidekiq
    links:
      - 'postgres'
      - 'redis'
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    environment:
      - SECRET_KEY_BASE=test
      - DATABASE_PASSWORD=docker
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - TERM=xterm 
      - REDIS_URL_SIDEKIQ=redis://mfcs_redis:6379/12
    volumes:
      - ./:/home/mfcs

  webpacker:
    build: .
    container_name: mfcs_webpack
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
    command: ./bin/webpack-dev-server
    volumes:
      - .:/home/mfcs
    ports:
      - '3035:3035'
    
  elasticsearch:
    image: elasticsearch:7.10.1
    container_name: mfcs_elasticsearch
    restart: always
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Dlog4j2.formatMsgNoLookups=true"           
    volumes: 
      - ./search_data:/usr/share/elasticsearch/data
    ports: 
      - 9200:9200
      - 9300:9300   